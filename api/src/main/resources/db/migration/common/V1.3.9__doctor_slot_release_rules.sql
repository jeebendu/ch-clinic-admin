-- Create doctor_slot_release_rules table without partial UNIQUE constraints
CREATE TABLE IF NOT EXISTS doctor_slot_release_rules (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    
    doctor_branch_id BIGINT NOT NULL,
    scope VARCHAR(20) NOT NULL CHECK (scope IN ('default', 'weekday', 'time_range')),
    
    weekday INTEGER NULL CHECK (weekday BETWEEN 0 AND 6),  -- 0 = Sunday, 6 = Saturday
    time_range_id BIGINT NULL,
    
    release_days_before INTEGER DEFAULT 1,
    release_time TIME DEFAULT '06:00:00',
    release_minutes_before_slot INTEGER DEFAULT NULL,
    
    is_active BOOLEAN DEFAULT TRUE,
    
    created_by VARCHAR(255) DEFAULT 'system',
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by VARCHAR(255),
    modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_release_doctor_branch 
        FOREIGN KEY (doctor_branch_id) REFERENCES doctor_branch(id) ON DELETE CASCADE,
    
    CONSTRAINT fk_release_time_range 
        FOREIGN KEY (time_range_id) REFERENCES doctor_time_ranges(id) ON DELETE SET NULL,
    
    CONSTRAINT weekday_scope_dependency 
        CHECK (
            (scope != 'weekday' OR weekday IS NOT NULL) AND 
            (scope != 'time_range' OR time_range_id IS NOT NULL)
        )
);

-- Add partial unique constraints via unique indexes
CREATE UNIQUE INDEX IF NOT EXISTS unique_default_rule
    ON doctor_slot_release_rules(doctor_branch_id)
    WHERE scope = 'default';

CREATE UNIQUE INDEX IF NOT EXISTS unique_weekday_rule
    ON doctor_slot_release_rules(doctor_branch_id, weekday)
    WHERE scope = 'weekday';

CREATE UNIQUE INDEX IF NOT EXISTS unique_time_range_rule
    ON doctor_slot_release_rules(doctor_branch_id, time_range_id)
    WHERE scope = 'time_range';

-- Indexes for lookup performance
CREATE INDEX IF NOT EXISTS idx_doctor_slot_release_rules_doctor_branch 
    ON doctor_slot_release_rules(doctor_branch_id);

CREATE INDEX IF NOT EXISTS idx_doctor_slot_release_rules_scope 
    ON doctor_slot_release_rules(scope);

-- Add release_status column to slot table
ALTER TABLE doctor_slot 
ADD COLUMN IF NOT EXISTS release_status VARCHAR(20) DEFAULT 'RELEASED' 
    CHECK (release_status IN ('PENDING', 'RELEASED', 'BLOCKED'));
	
	
	
CREATE INDEX idx_slot_unique ON doctor_slot (doctor_branch_id, date, start_time, end_time);
ALTER TABLE doctor_slot ADD CONSTRAINT uq_slot UNIQUE (doctor_branch_id, date, start_time, end_time);


ALTER TABLE appointment DROP CONSTRAINT fk_doctor_slot;
ALTER TABLE appointment ADD CONSTRAINT fk_doctor_slot FOREIGN KEY (slot_id) REFERENCES doctor_slot(id) ON DELETE RESTRICT;


