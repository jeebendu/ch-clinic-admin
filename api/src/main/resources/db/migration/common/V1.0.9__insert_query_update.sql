-- Insert languages
-- Insert languages without id, added English
ALTER TABLE "language" ADD CONSTRAINT unique_language_name UNIQUE ("name");

INSERT INTO "language" ("name", "created_by", "created_time")
VALUES 
  ('English', 'system', CURRENT_TIMESTAMP),
  ('Hindi', 'system', CURRENT_TIMESTAMP),
  ('Bengali', 'system', CURRENT_TIMESTAMP),
  ('Telugu', 'system', CURRENT_TIMESTAMP),
  ('Marathi', 'system', CURRENT_TIMESTAMP),
  ('Tamil', 'system', CURRENT_TIMESTAMP),
  ('Urdu', 'system', CURRENT_TIMESTAMP),
  ('Gujarati', 'system', CURRENT_TIMESTAMP),
  ('Kannada', 'system', CURRENT_TIMESTAMP),
  ('Odia', 'system', CURRENT_TIMESTAMP),
  ('Malayalam', 'system', CURRENT_TIMESTAMP),
  ('Punjabi', 'system', CURRENT_TIMESTAMP),
  ('Assamese', 'system', CURRENT_TIMESTAMP),
  ('Maithili', 'system', CURRENT_TIMESTAMP),
  ('Sanskrit', 'system', CURRENT_TIMESTAMP),
  ('Konkani', 'system', CURRENT_TIMESTAMP),
  ('Dogri', 'system', CURRENT_TIMESTAMP),
  ('Bodo', 'system', CURRENT_TIMESTAMP),
  ('Santhali', 'system', CURRENT_TIMESTAMP),
  ('Sindhi', 'system', CURRENT_TIMESTAMP),
  ('Kashmiri', 'system', CURRENT_TIMESTAMP)
  ON CONFLICT ("name") DO NOTHING;


-- Update doctor slug
UPDATE doctor
SET slug = TRIM(BOTH '-' FROM LOWER(
        REGEXP_REPLACE(CONCAT(firstname, '-', lastname), '[^a-zA-Z0-9]+', '-', 'g')
    )) || '-' || SUBSTRING(gen_random_uuid()::text, 1, 8);




-- Drop and create view doctor_branch_map_view
DROP VIEW IF EXISTS doctor_branch_map_view;

CREATE OR REPLACE VIEW doctor_branch_map_view AS
SELECT 
	d.id AS id,
	CONCAT(d.firstname, ' ', d.lastname) AS doctor_name,
	d.gender,
	d.slug,
	d.exp_year AS experience_years,
	d.city,
	d.image,

	-- Add specialization and language IDs
	ARRAY_AGG(DISTINCT s.id) AS specialization_ids,
	ARRAY_AGG(DISTINCT l.id) AS language_ids,

	STRING_AGG(DISTINCT s.name, ', ') AS specialties,
	STRING_AGG(DISTINCT l.name, ', ') AS languages,
	STRING_AGG(DISTINCT c.name, ', ' ORDER BY c.name) AS clinic_names,

	-- Add a search_text field for filtering
	to_tsvector('simple',
		COALESCE(d.firstname, '') || ' ' ||
		COALESCE(d.lastname, '') || ' ' ||
		COALESCE(d.city, '') || ' ' ||
		COALESCE(STRING_AGG(DISTINCT s.name, ' '), '') || ' ' ||
		COALESCE(STRING_AGG(DISTINCT l.name, ' '), '') || ' ' ||
		COALESCE(STRING_AGG(DISTINCT c.name, ' '), '')
	) AS search_vector,

	(SELECT c2.name
	 FROM doctor_branch db2
	 JOIN branch b2 ON db2.branch_id = b2.id
	 JOIN clinic c2 ON b2.clinic_id = c2.id
	 WHERE db2.doctor_id = d.id
	 ORDER BY c2.name
	 LIMIT 1) AS primary_clinic,

	(COUNT(DISTINCT c.id) - 1) AS additional_clinics_count,

	STRING_AGG(DISTINCT b.name, ', ' ORDER BY b.name) AS all_branches,
	ROUND(AVG(DISTINCT dr.rating), 2) AS average_rating,
	COUNT(DISTINCT dr.id) AS review_count,
	MIN(COALESCE(db.consultation_fee, 500)) AS min_price,
	MAX(COALESCE(db.consultation_fee, 500)) AS max_price,

	d.image AS profile_image,

	-- Removed: COUNT(DISTINCT db.branch_id) AS branch_count
	COUNT(DISTINCT b.clinic_id) AS clinic_count

FROM doctor d
JOIN doctor_branch db ON d.id = db.doctor_id
JOIN branch b ON db.branch_id = b.id
JOIN clinic c ON b.clinic_id = c.id

LEFT JOIN doctor_specialization ds ON d.id = ds.doctor_id
LEFT JOIN specialization s ON ds.specialization_id = s.id

LEFT JOIN doctor_language dl ON d.id = dl.doctor_id
LEFT JOIN language l ON dl.language_id = l.id

LEFT JOIN doctor_review dr ON d.id = dr.doctor_id

GROUP BY 
	d.id, d.firstname, d.lastname, d.gender, d.exp_year, d.city, d.image, d.slug;


 
    




-- Create doctor_service_map table
CREATE TABLE doctor_service_map (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  doctor_branch_id INT NOT NULL REFERENCES doctor_branch(id),
  service_type_id INT NOT NULL REFERENCES service_type(id),
  price NUMERIC(10,2) NOT NULL,
  created_by VARCHAR NOT NULL,
  created_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified_by VARCHAR,
  modified_time TIMESTAMP
);

-- Create clinic_service_map table
CREATE TABLE clinic_service_map (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  branch_id INT NOT NULL REFERENCES branch(id),
  service_type_id INT NOT NULL REFERENCES service_type(id),
  price NUMERIC(10,2) NOT NULL,
  created_by VARCHAR NOT NULL,
  created_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified_by VARCHAR,
  modified_time TIMESTAMP
);

DROP TABLE IF EXISTS doctor_service;
DROP TABLE IF EXISTS clinic_service;



-- Create clinic_type table
CREATE TABLE clinic_type (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  description TEXT NULL,
  created_by VARCHAR NOT NULL,
  created_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified_by VARCHAR NULL,
  modified_time TIMESTAMP NULL DEFAULT NULL
);

-- Add clinic_type_id to clinic table
ALTER TABLE clinic
ADD COLUMN clinic_type_id INTEGER REFERENCES clinic_type(id);

-- Insert clinic types
INSERT INTO clinic_type (name, description, created_by) VALUES
  ('General Clinic', 'Clinic offering general medical consultations and services.', 'system'),
  ('Dental Clinic', 'Clinic specializing in dental care and oral health.', 'system'),
  ('Audiometry Clinic', 'Clinic specializing in hearing tests and ear care.', 'system'),
  ('Physiotherapy Clinic', 'Clinic specializing in physical therapy and rehabilitation.', 'system'),
  ('Pediatric Clinic', 'Clinic specializing in medical care for children.', 'system'),
  ('Gynecology Clinic', 'Clinic specializing in womenâ€™s reproductive health.', 'system'),
  ('Homeopathy Clinic', 'Clinic offering homeopathic treatments.', 'system'),
  ('Ayurveda Clinic', 'Clinic providing Ayurvedic treatments and therapies.', 'system'),
  ('ENT Clinic', 'Clinic specializing in Ear, Nose, and Throat care.', 'system'),
  ('Cardiology Clinic', 'Clinic specializing in heart-related treatments and care.', 'system'),
  ('Dermatology Clinic', 'Clinic specializing in skin care and diseases.', 'system'),
  ('Diabetes Care Clinic', 'Clinic focusing on diabetes management and treatment.', 'system'),
  ('Psychiatric Clinic', 'Clinic specializing in mental health and psychiatric care.', 'system');
  
  
  
  
-- Drop existing unique constraints on "name" and "code"
ALTER TABLE "branch" DROP CONSTRAINT IF EXISTS "branch_name_key";
ALTER TABLE "branch" DROP CONSTRAINT IF EXISTS "branch_code_key";

-- Add unique constraint on the combination of "clinic_id", "name", and "code"
ALTER TABLE "branch"
ADD CONSTRAINT "branch_clinic_name_code_unique" UNIQUE ("clinic_id", "name", "code");



ALTER TABLE service_type DROP COLUMN price;
ALTER TABLE service_type ADD COLUMN description TEXT;

INSERT INTO "service_type" ("id", "name", "description", "created_by", "created_time")
VALUES
  (1, 'General Consultation', 'Basic general medical consultation.', 'system', CURRENT_TIMESTAMP),
  (2, 'Follow-up Consultation', 'Consultation for follow-up visits.', 'system', CURRENT_TIMESTAMP),
  (3, 'Pediatric Consultation', 'Medical consultation specialized for children.', 'system', CURRENT_TIMESTAMP),
  (4, 'Gynecology Consultation', 'Consultation for womens health issues.', 'system', CURRENT_TIMESTAMP),
  (5, 'Orthopedic Consultation', 'Consultation related to bones and muscles.', 'system', CURRENT_TIMESTAMP),
  (6, 'Cardiology Consultation', 'Heart-related medical consultation.', 'system', CURRENT_TIMESTAMP),
  (7, 'Dermatology Consultation', 'Skin-related medical consultation.', 'system', CURRENT_TIMESTAMP),
  (8, 'Psychiatric Consultation', 'Mental health and psychiatric consultation.', 'system', CURRENT_TIMESTAMP),
  (9, 'ENT Consultation', 'Ear, Nose, and Throat consultation.', 'system', CURRENT_TIMESTAMP),
  (10, 'Neurology Consultation', 'Consultation for neurological conditions.', 'system', CURRENT_TIMESTAMP),
  (11, 'Blood Test', 'Laboratory blood test services.', 'system', CURRENT_TIMESTAMP),
  (12, 'X-Ray', 'Radiographic imaging service.', 'system', CURRENT_TIMESTAMP),
  (13, 'Ultrasound', 'Ultrasound imaging service.', 'system', CURRENT_TIMESTAMP),
  (14, 'ECG', 'Electrocardiogram test.', 'system', CURRENT_TIMESTAMP),
  (15, 'MRI Scan', 'Magnetic Resonance Imaging scan.', 'system', CURRENT_TIMESTAMP),
  (16, 'CT Scan', 'Computed Tomography scan.', 'system', CURRENT_TIMESTAMP),
  (17, 'Physiotherapy Session', 'Physical therapy treatment session.', 'system', CURRENT_TIMESTAMP),
  (18, 'Occupational Therapy', 'Therapy for daily living and work skills.', 'system', CURRENT_TIMESTAMP),
  (19, 'Speech Therapy', 'Therapy for speech and communication.', 'system', CURRENT_TIMESTAMP),
  (20, 'Health Check-up - Basic', 'Basic health screening package.', 'system', CURRENT_TIMESTAMP),
  (21, 'Health Check-up - Advanced', 'Comprehensive health screening package.', 'system', CURRENT_TIMESTAMP),
  (22, 'Vaccination', 'Immunization services.', 'system', CURRENT_TIMESTAMP),
  (23, 'Teleconsultation', 'Remote consultation via phone or video.', 'system', CURRENT_TIMESTAMP),
  (24, 'Nutritional Counseling', 'Diet and nutrition advice.', 'system', CURRENT_TIMESTAMP),
  (25, 'Diabetes Management', 'Medical services for diabetes care.', 'system', CURRENT_TIMESTAMP);

