-- Active: 1744056660070@@127.0.0.1@5432@clinichub_care@testtt

-- ############################################################
-- # Clinic SAAS System Database Schema
-- ############################################################

-- ############################################################
-- # Core Module Tables
-- ############################################################


CREATE SEQUENCE "revinfo_seq" AS INTEGER START WITH 1 INCREMENT BY 50 MINVALUE 1 NO MAXVALUE CACHE 1;
 

-- RevInfo: Audit table for tracking revisions
CREATE TABLE IF NOT EXISTS "revinfo" (
    "rev" SERIAL NOT NULL,
    "revtstmp" BIGINT,
    PRIMARY KEY ("rev")
);

CREATE TABLE "language_translations" (
    "id" SERIAL PRIMARY KEY,
    "key" VARCHAR(255) NOT NULL,
    "language_code" VARCHAR(10) NOT NULL, -- e.g., en, es, fr
    "translation" TEXT NOT NULL,
    "created_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Core Country: Contains country data
CREATE TABLE IF NOT EXISTS "core_country" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR NOT NULL,
    "iso" VARCHAR,
    "code" VARCHAR,
    "status" BOOLEAN NOT NULL DEFAULT false,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("name")
);

-- Core State: Contains state/province data
CREATE TABLE IF NOT EXISTS "core_state" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "country_id" INTEGER NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "code" VARCHAR(2) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("name"),
    CONSTRAINT "FK_state_country" FOREIGN KEY ("country_id") REFERENCES "core_country" ("id") ON DELETE CASCADE
);

-- Core District: Contains district/county data
CREATE TABLE IF NOT EXISTS "core_district" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "state_id" INTEGER NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("state_id", "name"),
    CONSTRAINT "FK_district_state" FOREIGN KEY ("state_id") REFERENCES "core_state" ("id") ON DELETE CASCADE
);



-- Branch: Stores information about hospital branches/locations
CREATE TABLE IF NOT EXISTS "branch" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "code" VARCHAR(255) NOT NULL,
    "location" VARCHAR(255),
    "pincode" INTEGER,
    "city" VARCHAR(255),
    "mapurl" TEXT,
    "district_id" INTEGER NOT NULL,
    "is_active" BOOLEAN NOT NULL DEFAULT false,
    "image" VARCHAR(255),
    "latitude" DOUBLE PRECISION,
    "longitude" DOUBLE PRECISION,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("name"),
    UNIQUE ("code"),
    CONSTRAINT "fk_branch_district" FOREIGN KEY ("district_id") REFERENCES "core_district" ("id") ON DELETE CASCADE
);


-- Branch History: Tracks changes to branch information
CREATE TABLE IF NOT EXISTS "branch_history" (
    "rev" INTEGER NOT NULL,
    "revtype" SMALLINT,
    "id" INTEGER NOT NULL,
    "name" VARCHAR(255),
    "code" VARCHAR(255),
    "location" VARCHAR(255),
    "pincode" INTEGER,
    "city" VARCHAR(255),
    "mapurl" VARCHAR,
    "created_by" VARCHAR(255),
    "created_time" TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP,
    "district" VARCHAR(255),
    PRIMARY KEY ("rev", "id"),
    CONSTRAINT "branch_history_rev_fk" FOREIGN KEY ("rev") REFERENCES "revinfo" ("rev") ON DELETE CASCADE
);

-- Core Modules: System modules configuration
CREATE TABLE IF NOT EXISTS "core_modules" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(50) NOT NULL,
    "parent_id" VARCHAR(50),
    "code" VARCHAR(50),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Core Sequence: Manages auto-incrementing sequences for various modules
CREATE TABLE IF NOT EXISTS "core_sequence" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "branch_id" BIGINT,
    "module_id" BIGINT,
    "increment_prefix" VARCHAR(20) NOT NULL,
    "increment_pad_char" VARCHAR(1) NOT NULL DEFAULT '0',
    "increment_pad_length" INTEGER NOT NULL DEFAULT 8,
    "increment_last_id" INTEGER NOT NULL DEFAULT 0,
    "increment_last_final" VARCHAR(50) DEFAULT '0',
    "include_year" BOOLEAN NOT NULL DEFAULT false,
    "include_branch_code" BOOLEAN NOT NULL DEFAULT false,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "core_sequence_branch_fk" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "core_sequence_module_fk" FOREIGN KEY ("module_id") REFERENCES "core_modules" ("id") ON DELETE CASCADE
);

-- Core Relationship: Family/personal relationships
CREATE TABLE IF NOT EXISTS "core_relationship" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR NOT NULL,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Core Source: Patient/lead acquisition sources
CREATE TABLE IF NOT EXISTS "core_source" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("name")
);

-- Core Status: Status options for various modules
CREATE TABLE IF NOT EXISTS "core_status" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "module_id" INTEGER NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "color_code" VARCHAR(255),
    "sort_order" INTEGER NOT NULL DEFAULT 0,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("module_id", "name"),
    CONSTRAINT "FK_status_module" FOREIGN KEY ("module_id") REFERENCES "core_modules" ("id") ON DELETE CASCADE
);

-- Gender: Gender options
CREATE TABLE IF NOT EXISTS "gender" (
    "id" BIGINT NOT NULL DEFAULT 0,
    "name" VARCHAR(50) NOT NULL,
    PRIMARY KEY ("id")
);

-- System Config: System-wide configuration
CREATE TABLE IF NOT EXISTS "system_config" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "is_import" BOOLEAN,
    "is_export" BOOLEAN,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Payment Type: Payment methods
CREATE TABLE IF NOT EXISTS "payment_type" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(20) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("name")
);

-- ############################################################
-- # User Management Tables
-- ############################################################

-- Role: User roles for access control
CREATE TABLE IF NOT EXISTS "role" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "is_active" BOOLEAN NOT NULL DEFAULT false,
    "is_display" BOOLEAN NOT NULL DEFAULT false,
    "is_default" BOOLEAN NOT NULL DEFAULT false,
    "description" VARCHAR(255),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("name")
);

-- Users: User accounts
CREATE TABLE IF NOT EXISTS "users" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "branch_id" BIGINT,
    "username" VARCHAR(255) NOT NULL,
    "password" VARCHAR(255) NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "email" VARCHAR(255),
    "phone" VARCHAR(255),
    "role_id" BIGINT NOT NULL,
    "is_active" BOOLEAN NOT NULL DEFAULT false,
    "is_verified" BOOLEAN NOT NULL DEFAULT false,
    "effective_from" TIMESTAMP,
    "effective_to" TIMESTAMP,
    "image" VARCHAR(255),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    UNIQUE ("username"),
    UNIQUE ("phone"),
    CONSTRAINT "user_branch_fk" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE SET NULL,
    CONSTRAINT "user_role_fk" FOREIGN KEY ("role_id") REFERENCES "role" ("id") ON DELETE CASCADE
);

-- Role Permission: Access control for modules
CREATE TABLE IF NOT EXISTS "role_permission" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "role_id" BIGINT NOT NULL,
    "module_id" BIGINT NOT NULL,
    "_read" BOOLEAN NOT NULL DEFAULT false,
    "_write" BOOLEAN NOT NULL DEFAULT false,
    "upload" BOOLEAN NOT NULL DEFAULT false,
    "print" BOOLEAN NOT NULL DEFAULT false,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "rm_module_fk" FOREIGN KEY ("module_id") REFERENCES "core_modules" ("id") ON DELETE CASCADE,
    CONSTRAINT "rm_role_fk" FOREIGN KEY ("role_id") REFERENCES "role" ("id") ON DELETE CASCADE
);

-- User Login Info: Tracks user login/logout activity
CREATE TABLE IF NOT EXISTS "user_login_info" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "username" VARCHAR(255),
    "user_id" INTEGER NOT NULL,
    "login_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "logout_time" TIMESTAMP,
    "ip_address" VARCHAR(45),
    "user_agent" TEXT,
    "status" BOOLEAN NOT NULL DEFAULT false,
    "country_code" VARCHAR(10),
    "country" VARCHAR(255),
    "region" VARCHAR(255),
    "city" VARCHAR(255),
    "lat" DOUBLE PRECISION,
    "lon" DOUBLE PRECISION,
    "mobile" BOOLEAN DEFAULT false,
    PRIMARY KEY ("id"),
    CONSTRAINT "user_login_info_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE
);

-- User OTP: One-time passwords for authentication
CREATE TABLE IF NOT EXISTS "user_otp" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "user_id" BIGINT NOT NULL,
    "otp" VARCHAR(6) NOT NULL,
    "email_or_mobile" VARCHAR(255),
    "attempts" INTEGER,
    "session" VARCHAR(255),
    "reason" VARCHAR(255),
    "used_time" TIMESTAMP,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "expiry_time" TIMESTAMP NOT NULL,
    "used" BOOLEAN NOT NULL DEFAULT false,
    PRIMARY KEY ("id"),
    CONSTRAINT "user_otp_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE
);

-- Reset Password: Password reset tokens
CREATE TABLE IF NOT EXISTS "reset_password" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "user_id" BIGINT NOT NULL,
    "token" VARCHAR NOT NULL,
    "reset_time" TIMESTAMP,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "FK_reset_password_users" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE
);

-- Staff: Hospital staff details
CREATE TABLE IF NOT EXISTS "staff" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "user_id" BIGINT NOT NULL,
    "firstname" VARCHAR(50) NOT NULL,
    "lastname" VARCHAR(50),
    "uid" VARCHAR(50) NOT NULL,
    "dob" DATE,
    "age" INTEGER,
    "gender" VARCHAR(50),
    "desgination" VARCHAR(20),
    "exp_year" VARCHAR(30),
    "whatsapp_no" VARCHAR(50),
    "address" VARCHAR(255),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "admin_user_fk" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE
);

-- Staff Branch: Many-to-many relationship between staff and branches
CREATE TABLE IF NOT EXISTS "staff_branch" (
    "staff_id" BIGINT NOT NULL,
    "branch_id" BIGINT NOT NULL,
    PRIMARY KEY ("staff_id", "branch_id"),
    CONSTRAINT "fk_staff" FOREIGN KEY ("staff_id") REFERENCES "staff" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_branch" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE
);

-- ############################################################
-- # Finance Module Tables
-- ############################################################

-- Payment Transaction: Financial transactions
CREATE TABLE IF NOT EXISTS "payment_transaction" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "branch_id" BIGINT NOT NULL,
    "payment_type_id" BIGINT NOT NULL DEFAULT 0,
    "remark" VARCHAR(255),
    "withdraw" VARCHAR(50),
    "deposit" VARCHAR(50),
    "total" VARCHAR(50),
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "payment_branch_fk" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "payment_type_fk" FOREIGN KEY ("payment_type_id") REFERENCES "payment_type" ("id") ON DELETE CASCADE
);

-- Expense: Hospital expenses
CREATE TABLE IF NOT EXISTS "expense" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "uid" VARCHAR(50) NOT NULL DEFAULT '0',
    "branch_id" BIGINT NOT NULL,
    "payment_type_id" BIGINT NOT NULL,
    "subtotal" VARCHAR(50),
    "discount" VARCHAR(50),
    "grand_total" VARCHAR(50),
    "remark" VARCHAR(255),
    "expense_time" TIMESTAMP,
    "is_approved" BOOLEAN NOT NULL DEFAULT false,
    "approved_by" INTEGER,
    "approved_time" TIMESTAMP,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "expense_approved_by_fk" FOREIGN KEY ("approved_by") REFERENCES "staff" ("id") ON DELETE SET NULL,
    CONSTRAINT "expense_branch_fk" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "expense_pay_type_fk" FOREIGN KEY ("payment_type_id") REFERENCES "payment_type" ("id") ON DELETE CASCADE
);

-- Expense Items: Individual expense items
CREATE TABLE IF NOT EXISTS "expense_items" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "expense_id" BIGINT NOT NULL,
    "description" VARCHAR(255) NOT NULL,
    "price" VARCHAR(50) NOT NULL,
    "qty" INTEGER NOT NULL,
    "total" VARCHAR(50) NOT NULL,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "expense_order_fk" FOREIGN KEY ("expense_id") REFERENCES "expense" ("id") ON DELETE CASCADE
);

-- ############################################################
-- # Medical Module Tables
-- ############################################################

-- Medical Council: Medical regulatory bodies
CREATE TABLE IF NOT EXISTS "medical_council" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Language: Supported languages
CREATE TABLE IF NOT EXISTS "language" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Specialization: Medical specializations
CREATE TABLE IF NOT EXISTS "specialization" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "icon" VARCHAR(255),
    "is_active" BOOLEAN DEFAULT true,
    "image_url" VARCHAR(255),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Service Type: Medical services offered
CREATE TABLE IF NOT EXISTS "service_type" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR NOT NULL,
    "price" NUMERIC(10,2),
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Doctor Additional Info: Extended doctor information
CREATE TABLE IF NOT EXISTS "doctor_additional" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "registation_number" VARCHAR(255),
    "registation_year" VARCHAR(11),
    "year_completion_degree" VARCHAR(11),
    "degree_college" VARCHAR(100),
    "establishment_type" VARCHAR(255),
    "establishment_name" VARCHAR(255),
    "establishment_city" VARCHAR(255),
    "establishment_district_id" INTEGER,
    "medical_council_id" INTEGER,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "fk_establishment_district" FOREIGN KEY ("establishment_district_id") REFERENCES "core_district" ("id") ON DELETE SET NULL,
    CONSTRAINT "fk_medical_council" FOREIGN KEY ("medical_council_id") REFERENCES "medical_council" ("id") ON DELETE SET NULL
);

-- Doctor: Medical practitioners
CREATE TABLE IF NOT EXISTS "doctor" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "firstname" VARCHAR(255) NOT NULL,
    "lastname" VARCHAR(255),
    "user_id" BIGINT,
    "uid" VARCHAR(50) NOT NULL,
    
    "biography" VARCHAR(500) NOT NULL,
    "joining_date" DATE,
    "gender" INTEGER NOT NULL DEFAULT 0,
    "desgination" VARCHAR(20),
    "qualification" VARCHAR(255),
    "exp_year" DOUBLE PRECISION,
    "is_external" BOOLEAN NOT NULL DEFAULT false,
    "is_verified" BOOLEAN NOT NULL DEFAULT false,
    "email" VARCHAR(255),
    "phone" VARCHAR(12),
    "image" VARCHAR(255),
    "about" VARCHAR(500),
    "pincode" VARCHAR(10),
    "district_id" INTEGER,
    "city" VARCHAR(100),
    "additional_doctor_id" BIGINT,
    "is_published_online" BOOLEAN NOT NULL DEFAULT false,
    "consultation_fee" DOUBLE PRECISION DEFAULT 0,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "fk_additional_doctor" FOREIGN KEY ("additional_doctor_id") REFERENCES "doctor_additional" ("id") ON DELETE SET NULL,
    CONSTRAINT "fk_doctor_district" FOREIGN KEY ("district_id") REFERENCES "core_district" ("id") ON DELETE SET NULL,
    CONSTRAINT "user_doctor_fk" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE SET NULL
);

-- Doctor Branch: Many-to-many relationship between doctors and branches
CREATE TABLE IF NOT EXISTS "doctor_branch" (
    "doctor_id" BIGINT NOT NULL,
    "branch_id" BIGINT NOT NULL,
    PRIMARY KEY ("doctor_id", "branch_id"),
    CONSTRAINT "fk_doctor" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_branch" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE
);

-- Doctor Specialization: Many-to-many relationship between doctors and specializations
CREATE TABLE IF NOT EXISTS "doctor_specialization" (
    "doctor_id" BIGINT NOT NULL,
    "specialization_id" BIGINT NOT NULL,
    PRIMARY KEY ("doctor_id", "specialization_id"),
    CONSTRAINT "fk_doctor" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_specialization" FOREIGN KEY ("specialization_id") REFERENCES "specialization" ("id") ON DELETE CASCADE
);

-- Doctor Language: Languages spoken by doctors
CREATE TABLE IF NOT EXISTS "doctor_language" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "doctor_id" INTEGER NOT NULL,
    "language_id" INTEGER NOT NULL,
    PRIMARY KEY ("id"),
    CONSTRAINT "fk_doctor_doctor_language" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_language_doctor_language" FOREIGN KEY ("language_id") REFERENCES "language" ("id") ON DELETE CASCADE
);

-- Doctor Service: Services offered by doctors
CREATE TABLE IF NOT EXISTS "doctor_service" (
    "doctor_id" INTEGER NOT NULL,
    "service_type_id" INTEGER NOT NULL,
    PRIMARY KEY ("doctor_id", "service_type_id"),
    CONSTRAINT "doctor_service_doctor_id_fkey" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "doctor_service_service_type_id_fkey" FOREIGN KEY ("service_type_id") REFERENCES "service_type" ("id") ON DELETE CASCADE
);

-- Clinic: External clinics
CREATE TABLE IF NOT EXISTS "clinic" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "email" VARCHAR(30),
    "contact" VARCHAR(20),
    "address" VARCHAR(100),
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Clinic Branch Table: Links clinics to branches
CREATE TABLE "clinic_branch" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "clinic_id" INTEGER NOT NULL,
    "branch_id" INTEGER NOT NULL,
    FOREIGN KEY ("clinic_id") REFERENCES "clinic"("id") ON DELETE CASCADE,
    FOREIGN KEY ("branch_id") REFERENCES "branch"("id") ON DELETE CASCADE
);


-- Doctor Clinic: Relationship between doctors and clinics
CREATE TABLE IF NOT EXISTS "doctor_clinic" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "doctor_id" INTEGER NOT NULL,
    "clinic_id" INTEGER NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "doctor_clinic_doctor_id_fkey" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_clinic_doctor_clinic" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON DELETE CASCADE
);

-- Doctor Percentage: Fee percentages for doctors
CREATE TABLE IF NOT EXISTS "doctor_percentage" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "doctor_id" BIGINT NOT NULL,
    "service_type_id" BIGINT NOT NULL,
    "percentage" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "doctor_percentage_doctor_id_fkey" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "doctor_percentage_service_type_id_fkey" FOREIGN KEY ("service_type_id") REFERENCES "service_type" ("id") ON DELETE CASCADE
);

-- Doctor Slot: Appointment slots for doctors
CREATE TABLE IF NOT EXISTS "doctor_slot" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "doctor_id" INTEGER NOT NULL,
    "branch_id" INTEGER NOT NULL,
    "start_time" TIME NOT NULL,
    "end_time" TIME NOT NULL,
    "available_slots" INTEGER NOT NULL,
    "status" VARCHAR(20) NOT NULL,
    "date" DATE NOT NULL,
    "duration" INTEGER NOT NULL,
    "slot_type" VARCHAR(20) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "doctor_slot_branch_id_fkey" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "doctor_slot_doctor_id_fkey" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE
);

-- Patient: Patient information
CREATE TABLE IF NOT EXISTS "patient" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "firstname" VARCHAR(255) NOT NULL,
    "lastname" VARCHAR(255),
    "user_id" BIGINT,
    "uid" VARCHAR(50) NOT NULL,
    "dob" DATE,
    "age" INTEGER,
    "gender" VARCHAR(255),
    "alternative_contact" VARCHAR(50),
    "whatsapp_no" VARCHAR(50),
    "address" VARCHAR(255),
    "ref_doctor_id" BIGINT,
    "branch_id" INTEGER NOT NULL DEFAULT 1,
    "district_id" INTEGER,
    "city" VARCHAR(255),
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "FK_patient_branch" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_patient_district" FOREIGN KEY ("district_id") REFERENCES "core_district" ("id") ON DELETE SET NULL,
    CONSTRAINT "patient_ref_doctor_fk" FOREIGN KEY ("ref_doctor_id") REFERENCES "doctor" ("id") ON DELETE SET NULL,
    CONSTRAINT "patient_user_fk" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE SET NULL
);

-- Patient Health: Patient health information
CREATE TABLE IF NOT EXISTS "patient_health" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" INTEGER NOT NULL,
    "height" INTEGER,
    "weight" INTEGER,
    "blood_group" VARCHAR(15),
    "allergies" VARCHAR(255),
    "current_medication" VARCHAR(255),
    "blood_pressure" VARCHAR(50),
    "heart_rate" VARCHAR(50),
    "cholesterol" VARCHAR(50),
    "blood_sugar" VARCHAR(50),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "patient_health_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);

-- Patient Relation: Family members of patients
CREATE TABLE IF NOT EXISTS "patient_relation" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" INTEGER NOT NULL,
    "name" VARCHAR(100) NOT NULL,
    "gender" VARCHAR(10),
    "age" INTEGER,
    "phone" VARCHAR(15),
    "relationship" VARCHAR(100) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "patient_relation_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);

-- Patient Document: Medical documents for patients
CREATE TABLE IF NOT EXISTS "patient_document" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" BIGINT NOT NULL,
    "date" DATE NOT NULL,
    "document_name" VARCHAR(50) NOT NULL,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "patient_document_fk" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);

-- Doctor Review: Patient reviews of doctors
CREATE TABLE IF NOT EXISTS "doctor_review" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "doctor_id" INTEGER NOT NULL,
    "patient_id" INTEGER NOT NULL,
    "likes" INTEGER,
    "dislike" INTEGER,
    "message" VARCHAR(400),
    "rating" INTEGER,
    "isrecommended" BOOLEAN,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "doctor_review_doctor_id_fkey" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "doctor_review_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);

-- Patient Doctor Remark: Doctor notes on patients
CREATE TABLE IF NOT EXISTS "patient_doctor_remark" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" BIGINT NOT NULL,
    "date_time" TIMESTAMP NOT NULL,
    "remark" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "remark_patient_fk" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);

-- Patient Diagnosis Audiogram: Hearing test results
CREATE TABLE IF NOT EXISTS "patient_diagnosis_audiogram" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "uid" VARCHAR NOT NULL,
    "branch_id" BIGINT NOT NULL,
    "patient_id" BIGINT NOT NULL,
    "modality" VARCHAR(255),
    "frequency_id" BIGINT,
    "level" INTEGER,
    "puretone_left" VARCHAR NOT NULL,
    "puretone_right" VARCHAR NOT NULL,
    "ear_left" VARCHAR,
    "ear_right" VARCHAR,
    "test_left" VARCHAR,
    "test_right" VARCHAR,
    "impedance_audiometry" VARCHAR,
    "pro_diagnosis_left" VARCHAR,
    "pro_diagnosis_right" VARCHAR,
    "recommendation" TEXT,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "audiogram_branch_fk" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "audiogram_patient_fk" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);


-- Customer: Customer information
CREATE TABLE IF NOT EXISTS "customer" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "first_name" VARCHAR(255) NOT NULL,
    "last_name" VARCHAR(255),
    "email" VARCHAR(255),
    "phone" VARCHAR(255),
    "address" VARCHAR(255),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Customer Transaction: Customer payment records
CREATE TABLE IF NOT EXISTS "customer_txn" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "customer_id" INTEGER NOT NULL,
    "debit" DECIMAL(12,2) NOT NULL,
    "credit" DECIMAL(12,2) NOT NULL,
    "txn_date" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "reference_number" VARCHAR(100),
    "remark" VARCHAR(500) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "customer_txn_customer_fk" FOREIGN KEY ("customer_id") REFERENCES "patient" ("id") ON DELETE CASCADE
);


-- ############################################################
-- # Appointment Module Tables
-- ############################################################

-- Appointment Type: Types of appointments
CREATE TABLE IF NOT EXISTS "appointment_type" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Appointment Visit Type: In-person vs virtual visits
CREATE TABLE IF NOT EXISTS "appointment_visit_type" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Appointment: Patient appointments
CREATE TABLE IF NOT EXISTS "appointment" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" INTEGER NOT NULL,
    "status" VARCHAR(50) NOT NULL DEFAULT 'IN_PROGRESS',
    "slot_id" INTEGER NOT NULL,
    "family_member_id" INTEGER,
    "doctor_clinic_id" INTEGER,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "appointment_doctor_clinic" FOREIGN KEY ("doctor_clinic_id") REFERENCES "doctor_clinic" ("id") ON DELETE SET NULL,
    CONSTRAINT "appointment_family_member" FOREIGN KEY ("family_member_id") REFERENCES "patient_relation" ("id") ON DELETE SET NULL,
    CONSTRAINT "appointment_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_doctor_slot" FOREIGN KEY ("slot_id") REFERENCES "doctor_slot" ("id") ON DELETE CASCADE
);

-- Appointment Request: Requests for appointments
CREATE TABLE IF NOT EXISTS "appointment_request" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "first_name" VARCHAR(255) NOT NULL,
    "last_name" VARCHAR(255),
    "email" VARCHAR(255),
    "phone" VARCHAR(50) NOT NULL,
    "dob" DATE,
    "gender" INTEGER NOT NULL DEFAULT 0,
    "city" VARCHAR(255),
    "district_id" INTEGER,
    "appointment_date" TIMESTAMP NOT NULL,
    "appointment_type_id" INTEGER NOT NULL,
    "visit_type_id" INTEGER NOT NULL,
    "doctor_id" INTEGER NOT NULL,
    "is_accept" BOOLEAN NOT NULL DEFAULT false,
    "is_reject" BOOLEAN NOT NULL DEFAULT false,
    "branch_id" INTEGER NOT NULL,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "appointment_request_appointment_type_fk" FOREIGN KEY ("appointment_type_id") REFERENCES "appointment_type" ("id") ON DELETE CASCADE,
    CONSTRAINT "appointment_request_appointment_visit_type_fk" FOREIGN KEY ("visit_type_id") REFERENCES "appointment_visit_type" ("id") ON DELETE CASCADE,
    CONSTRAINT "appointment_request_core_district_fk" FOREIGN KEY ("district_id") REFERENCES "core_district" ("id") ON DELETE SET NULL,
    CONSTRAINT "appointment_request_doctor_fk" FOREIGN KEY ("doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "fk_branch" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE
);

-- ############################################################
-- # Patient Care Module Tables
-- ############################################################

-- Symptoms: Common medical symptoms
CREATE TABLE IF NOT EXISTS "symptoms" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(400) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Diagnosis: Medical diagnoses
CREATE TABLE IF NOT EXISTS "diagnosis" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL,
    "created_by" VARCHAR(50) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(50),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- LabTest: Available laboratory tests
CREATE TABLE IF NOT EXISTS "labtest" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(400) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id")
);

-- Patient Schedule: Patient visits/consultations
CREATE TABLE IF NOT EXISTS "patient_schedule" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" BIGINT NOT NULL,
    "remark" VARCHAR(255),
    "consulting_doctor_id" BIGINT NOT NULL,
    "complaints" VARCHAR(255) NOT NULL,
    "post_consultation_remark" VARCHAR(255),
    "refer_by_doctor_id" BIGINT,
    "next_follow_up_date" VARCHAR,
    "history_of" VARCHAR(255),
    "appointment_id" INTEGER,
    "notes" VARCHAR(500),
    "status" VARCHAR(20) DEFAULT 'Active',
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "FK_patient_schedule_doctor" FOREIGN KEY ("consulting_doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "FK_patient_schedule_doctor_2" FOREIGN KEY ("refer_by_doctor_id") REFERENCES "doctor" ("id") ON DELETE SET NULL,
    CONSTRAINT "fk_appointment" FOREIGN KEY ("appointment_id") REFERENCES "appointment" ("id") ON DELETE SET NULL,
    CONSTRAINT "patient_schedule_fk" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE,
    CONSTRAINT "patient_schedule_status_check" CHECK ((status IN ('Active', 'Closed')))
);

-- Patient Symptoms: Symptoms reported during visits
CREATE TABLE IF NOT EXISTS "patient_symptoms" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "visit_id" INTEGER NOT NULL,
    "symptoms_id" INTEGER NOT NULL,
    "severity" VARCHAR(255),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "patient_symptoms_symptoms_id_fkey" FOREIGN KEY ("symptoms_id") REFERENCES "symptoms" ("id") ON DELETE CASCADE,
    CONSTRAINT "patient_symptoms_visit_id_fkey" FOREIGN KEY ("visit_id") REFERENCES "patient_schedule" ("id") ON DELETE CASCADE
);

-- Patient Service Map: Services provided to patients
CREATE TABLE IF NOT EXISTS "patient_service_map" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "patient_id" INTEGER NOT NULL,
    "service_type_id" INTEGER NOT NULL,
    "price" NUMERIC(10,2),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "FK_patient_service_map_patient" FOREIGN KEY ("patient_id") REFERENCES "patient" ("id") ON DELETE CASCADE,
    CONSTRAINT "FK_patient_service_map_service_type" FOREIGN KEY ("service_type_id") REFERENCES "service_type" ("id") ON DELETE CASCADE
);


-- Visit Diagnosis: Diagnoses made during visits
CREATE TABLE IF NOT EXISTS "visit_diagnosis" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "visit_id" INTEGER NOT NULL,
    "diagnosis_id" INTEGER NOT NULL,
    "diagnosis_code" VARCHAR(50),
    "description" VARCHAR(500),
    "is_primary" BOOLEAN DEFAULT false,
    "diagnosed_by_id" INTEGER NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_diagnosis_diagnosed_by_id_fkey" FOREIGN KEY ("diagnosed_by_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_diagnosis_diagnosis_id_fkey" FOREIGN KEY ("diagnosis_id") REFERENCES "diagnosis" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_diagnosis_visit_id_fkey" FOREIGN KEY ("visit_id") REFERENCES "patient_schedule" ("id") ON DELETE CASCADE
);

-- Visit Lab Order: Laboratory tests ordered during visits
CREATE TABLE IF NOT EXISTS "visit_lab_order" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "visit_id" BIGINT NOT NULL,
    "test_name" VARCHAR(100) NOT NULL,
    "priority" VARCHAR(20) DEFAULT 'Normal',
    "notes" VARCHAR(500),
    "status" VARCHAR(20) DEFAULT 'Pending',
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_lab_order_visit_id_fkey" FOREIGN KEY ("visit_id") REFERENCES "patient_schedule" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_lab_order_priority_check" CHECK ((priority IN ('Normal', 'Urgent'))),
    CONSTRAINT "visit_lab_order_status_check" CHECK ((status IN ('Pending', 'Completed')))
);

-- Visit Lab Results: Results of laboratory tests
CREATE TABLE IF NOT EXISTS "visit_lab_results" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "lab_order_id" INTEGER NOT NULL,
    "result" VARCHAR(250) NOT NULL,
    "unit" VARCHAR(50),
    "status" VARCHAR(20) NOT NULL,
    "notes" VARCHAR(500),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_lab_results_lab_order_id_fkey" FOREIGN KEY ("lab_order_id") REFERENCES "visit_lab_order" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_lab_results_status_check" CHECK ((status IN ('Normal', 'Abnormal', 'Critical')))
);

-- Visit Vitals: Patient vital signs during visits
CREATE TABLE IF NOT EXISTS "visit_vitals" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "visit_id" BIGINT NOT NULL,
    "temperature" NUMERIC(5,2),
    "pulse" NUMERIC(5,2),
    "respiratory" NUMERIC(5,2),
    "spo2" NUMERIC(5,2),
    "blood_pressure" NUMERIC(5,2),
    "height" NUMERIC(5,2),
    "weight" NUMERIC(5,2),
    "waist" NUMERIC(5,2),
    "bsa" NUMERIC(5,2),
    "bmi" NUMERIC(5,2),
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_vitals_visit_id_fkey" FOREIGN KEY ("visit_id") REFERENCES "patient_schedule" ("id") ON DELETE CASCADE
);

-- Visit Invoice: Bills for patient visits
CREATE TABLE IF NOT EXISTS "visit_invoice" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "visit_id" INTEGER NOT NULL,
    "total_amount" NUMERIC(10,2) NOT NULL,
    "paid_amount" NUMERIC(10,2) NOT NULL,
    "status" VARCHAR(20) DEFAULT 'Unpaid',
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_invoice_visit_id_fkey" FOREIGN KEY ("visit_id") REFERENCES "patient_schedule" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_invoice_status_check" CHECK ((status IN ('Unpaid', 'PartiallyPaid', 'Paid')))
);

-- Visit Payment: Payments for invoices
CREATE TABLE IF NOT EXISTS "visit_payment" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "invoice_id" INTEGER NOT NULL,
    "payment_type_id" INTEGER NOT NULL,
    "amount" NUMERIC(10,2) NOT NULL,
    "paid_on" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_payment_invoice_id_fkey" FOREIGN KEY ("invoice_id") REFERENCES "visit_invoice" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_payment_payment_type_id_fkey" FOREIGN KEY ("payment_type_id") REFERENCES "payment_type" ("id") ON DELETE CASCADE
);

-- Visit Referral Commissions: Commissions for doctor referrals
CREATE TABLE IF NOT EXISTS "visit_referral_commissions" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "visit_id" INTEGER NOT NULL,
    "referral_doctor_id" INTEGER NOT NULL,
    "commission_amount" NUMERIC(10,2) NOT NULL,
    "status" VARCHAR(20) DEFAULT 'Pending',
    "calculated_on" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "visit_referral_commissions_referral_doctor_id_fkey" FOREIGN KEY ("referral_doctor_id") REFERENCES "doctor" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_referral_commissions_visit_id_fkey" FOREIGN KEY ("visit_id") REFERENCES "patient_schedule" ("id") ON DELETE CASCADE,
    CONSTRAINT "visit_referral_commissions_status_check" CHECK ((status IN ('Pending', 'Paid')))
);

-- ############################################################
-- # CRM Module Tables
-- ############################################################

-- Patient Enquiry: Initial patient inquiries
CREATE TABLE IF NOT EXISTS "patient_enquiry" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "first_name" VARCHAR(50) NOT NULL,
    "last_name" VARCHAR(50),
    "country_code" VARCHAR(50),
    "mobile" VARCHAR(50) NOT NULL,
    "relation_id" INTEGER,
    "assign_to" INTEGER NOT NULL,
    "district_id" INTEGER,
    "city" VARCHAR(50),
    "lead_date" TIMESTAMP NOT NULL,
    "follow_up_by" VARCHAR(50),
    "service_type_id" INTEGER NOT NULL,
    "source_id" INTEGER,
    "needs" VARCHAR,
    "notes" VARCHAR,
    "status_id" INTEGER NOT NULL,
    "remark" VARCHAR(50),
    "branch_id" INTEGER NOT NULL DEFAULT 1,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "FK_patient_enquiry_branch" FOREIGN KEY ("branch_id") REFERENCES "branch" ("id") ON DELETE CASCADE,
    CONSTRAINT "FK_patient_enquiry_district" FOREIGN KEY ("district_id") REFERENCES "core_district" ("id") ON DELETE SET NULL,
    CONSTRAINT "FK_patient_enquiry_relationship" FOREIGN KEY ("relation_id") REFERENCES "core_relationship" ("id") ON DELETE SET NULL,
    CONSTRAINT "FK_patient_enquiry_service_type" FOREIGN KEY ("service_type_id") REFERENCES "service_type" ("id") ON DELETE CASCADE,
    CONSTRAINT "FK_patient_enquiry_source" FOREIGN KEY ("source_id") REFERENCES "core_source" ("id") ON DELETE SET NULL,
    CONSTRAINT "FK_patient_enquiry_staff" FOREIGN KEY ("assign_to") REFERENCES "staff" ("id") ON DELETE CASCADE,
    CONSTRAINT "FK_patient_enquiry_status" FOREIGN KEY ("status_id") REFERENCES "core_status" ("id") ON DELETE CASCADE
);

-- Patient Enquiry Followup: Follow-up interactions with potential patients
CREATE TABLE IF NOT EXISTS "patient_enquiry_followup" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY,
    "follow_up_date" TIMESTAMP NOT NULL,
    "remark" VARCHAR NOT NULL,
    "enquiry_id" INTEGER NOT NULL,
    "next_follow_up_date" TIMESTAMP,
    "follow_up_by" INTEGER NOT NULL,
    "created_by" VARCHAR NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR,
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
    CONSTRAINT "FK_patient_enquiry_followup_staff" FOREIGN KEY ("follow_up_by") REFERENCES "staff" ("id") ON DELETE CASCADE,
    CONSTRAINT "FK_patient_enquiry_followup_enquiry" FOREIGN KEY ("enquiry_id") REFERENCES "patient_enquiry" ("id") ON DELETE CASCADE
);



-- ############################################################
-- # Plan And Subscription Module Tables
-- ############################################################
-- Plan Table: Defines subscription plans
CREATE TABLE IF NOT EXISTS "plan" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "price" DECIMAL(10, 2) NOT NULL,
    "special_price" DECIMAL(10, 2),
    "joining_price" DECIMAL(10, 2),
    "billing_cycle" VARCHAR(50) NOT NULL,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Feature Table: Defines features available in plans
CREATE TABLE IF NOT EXISTS "feature" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "created_by" VARCHAR(255) NOT NULL,
    "created_time" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "modified_by" VARCHAR(255),
    "modified_time" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Plan Feature Table: Links plans to features
CREATE TABLE IF NOT EXISTS "plan_feature" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "plan_id" INTEGER NOT NULL,
    "feature_id" INTEGER NOT NULL,
    CONSTRAINT "fk_plan_feature_plan" FOREIGN KEY ("plan_id") REFERENCES "plan"("id") ON DELETE CASCADE,
    CONSTRAINT "fk_plan_feature_feature" FOREIGN KEY ("feature_id") REFERENCES "feature"("id") ON DELETE CASCADE
);